version: "3.9"

# ──────────────────────────────────────────────────────────
# Common env anchor
# ──────────────────────────────────────────────────────────
x-common-env: &common-env
  DD_SITE: ${DD_SITE:-datadoghq.com}
  DD_ENV: ${DD_ENV:-workshop-local}
  DD_SERVICE: ${DD_SERVICE:-quantumhound}
  DD_VERSION: ${DD_VERSION:-0.1.0}

# ──────────────────────────────────────────────────────────
# Services (profiles: obs / core / ui)
# ──────────────────────────────────────────────────────────
services:
  # ==================== Observability Stack ====================
  datadog-agent:
    profiles: ["obs"]
    image: gcr.io/datadoghq/agent:latest
    container_name: datadog-agent
    environment:
      <<: *common-env
      DD_API_KEY: ${DD_API_KEY}
      DD_APM_ENABLED: "true"
      DD_APM_NON_LOCAL_TRAFFIC: "true"
      DD_LOGS_ENABLED: "true"
      DD_DOGSTATSD_NON_LOCAL_TRAFFIC: "true"
      DD_CONTAINER_EXCLUDE_LOGS: "name:datadog-agent"
    ports:
      - "8126:8126"         # APM
      - "8125:8125/udp"     # DogStatsD
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/8126'"]
      interval: 15s
      timeout: 3s
      retries: 10

  tempo:
    profiles: ["obs"]
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo/tempo.yaml"]
    volumes:
      - ./observability/tempo/tempo.yaml:/etc/tempo/tempo.yaml:ro
    ports:
      - "3200:3200"   # Query
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3200/ready || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  grafana:
    profiles: ["obs"]
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: grafana
    volumes:
      - ./observability/grafana/provisioning:/etc/grafana/provisioning:ro
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - loki
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3000/api/health | grep -q 'ok'"]
      interval: 10s
      timeout: 5s
      retries: 20

  loki:
    profiles: ["obs"]
    image: grafana/loki:2.9.8
    container_name: loki
    command: ["-config.file=/etc/loki/local-config.yaml"]
    volumes:
      - ./observability/loki/local-config.yaml:/etc/loki/local-config.yaml:ro
    ports:
      - "3100:3100"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3100/ready || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  promtail:
    profiles: ["obs"]
    image: grafana/promtail:2.9.8
    container_name: promtail
    command: ["-config.file=/etc/promtail/config.yml"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./observability/promtail/config.yml:/etc/promtail/config.yml:ro
    depends_on:
      - loki
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:9080/metrics || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 10

  # ==================== Core Runtime ====================
  localllama:
    profiles: ["core"]
    image: ollama/ollama:latest
    container_name: localllama
    restart: unless-stopped
    volumes:
      - ollama:/root/.ollama
    ports:
      - "11434:11434"
    command: ["serve"]
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 10

  # Lab1 — Chatbot API
  api:
    profiles: ["core"]
    build: ./lab1-chatbot
    container_name: api
    env_file: [.env]
    environment:
      <<: *common-env
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
    ports: ["8080:8080"]
    depends_on:
      datadog-agent:
        condition: service_started
      localllama:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/healthz | grep -q 'ok'"]
      interval: 10s
      timeout: 3s
      retries: 10

  # RAG — Chroma Vector DB
  vector-store:
    profiles: ["core"]
    image: chromadb/chromadb:latest
    container_name: vector-store
    restart: unless-stopped
    environment:
      IS_PERSISTENT: "TRUE"
      PERSIST_DIRECTORY: "/chroma-data"
      ANONYMIZED_TELEMETRY: "FALSE"
    volumes:
      - chroma:/chroma-data
    ports: ["8000:8000"]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/api/v1/heartbeat | grep -q '\"status\"'"]
      interval: 10s
      timeout: 3s
      retries: 20

  # RAG — Embedder
  text-embedder:
    profiles: ["core"]
    build: ./lab2-rag/text-embedder
    container_name: text-embedder
    env_file: [.env]
    environment:
      <<: *common-env
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
      HOST: "0.0.0.0"
      PORT: "5001"
    ports: ["5001:5001"]
    depends_on:
      - datadog-agent
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:5001/healthz | grep -q 'ok'"]
      interval: 10s
      timeout: 3s
      retries: 10

  # RAG — KB ingestion (batch-ish)
  kb_service:
    profiles: ["core"]
    build: ./lab2-rag/kb-service
    container_name: kb_service
    env_file: [.env]
    environment:
      <<: *common-env
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
      CHROMA_URL: ${CHROMA_URL:-http://vector-store:8000}
      INDEX_NAME: ${INDEX_NAME:-kb_demo}
      EMBEDDER_URL: http://text-embedder:5001
    volumes:
      - ./lab2-rag/kb_data:/kb_data
    depends_on:
      - datadog-agent
      - vector-store
      - text-embedder
    healthcheck:
      # expose /metrics:9100 or just TCP check
      test: ["CMD-SHELL", "bash -c '</dev/tcp/127.0.0.1/9100' || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 10

  # RAG — Retrieval/Generation API
  api_rag:
    profiles: ["core"]
    build: ./lab2-rag/api
    container_name: api_rag
    env_file: [.env]
    environment:
      <<: *common-env
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
      CHROMA_URL: ${CHROMA_URL:-http://vector-store:8000}
      INDEX_NAME: ${INDEX_NAME:-kb_demo}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MODEL_NAME: ${MODEL_NAME:-llama3.1}
      TOP_K: ${TOP_K:-4}
      HOST: "0.0.0.0"
      PORT: "8081"
    ports: ["8081:8081"]
    depends_on:
      - datadog-agent
      - vector-store
      - localllama
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8081/healthz | grep -q 'ok'"]
      interval: 10s
      timeout: 3s
      retries: 20

  # ==================== UI Layer ====================
  chatbot:
    profiles: ["ui"]
    build: ./lab2-rag/chatbot
    container_name: chatbot
    env_file: [.env]
    environment:
      <<: *common-env
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
      API_URL: http://api_rag:8081
      HOST: "0.0.0.0"
      PORT: "8082"
    ports: ["8082:8082"]
    depends_on:
      - datadog-agent
      - api_rag
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8082/healthz | grep -q 'ok'"]
      interval: 10s
      timeout: 3s
      retries: 10

  dash-ui:
    profiles: ["ui"]
    build: ./lab2-rag/dash-ui
    container_name: dash-ui
    env_file: [.env]
    environment:
      API_URL: http://api_rag:8081
      # ddtrace + OTel common
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
      OTEL_ENABLED: ${OTEL_ENABLED:-1}
      OTEL_EXPORTER_DATADOG_AGENT_URL: ${OTEL_EXPORTER_DATADOG_AGENT_URL:-http://datadog-agent:8126}
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: ${DD_SITE:-datadoghq.com}
      DD_ENV: ${DD_ENV:-workshop-local}
      DD_SERVICE: dash-ui
      DD_VERSION: ${DD_VERSION:-0.1.0}
    ports: ["8050:8050"]
    depends_on:
      - datadog-agent
      - api_rag
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8050/ | grep -qi '<html'"]
      interval: 15s
      timeout: 5s
      retries: 20

  streamlit-ui:
    profiles: ["ui"]
    build: ./lab2-rag/streamlit-ui
    container_name: streamlit-ui
    env_file: [.env]
    environment:
      API_URL: http://api_rag:8081
      # ddtrace + OTel common
      DD_AGENT_HOST: datadog-agent
      DD_TRACE_AGENT_URL: http://datadog-agent:8126
      OTEL_ENABLED: ${OTEL_ENABLED:-1}
      OTEL_EXPORTER_DATADOG_AGENT_URL: ${OTEL_EXPORTER_DATADOG_AGENT_URL:-http://datadog-agent:8126}
      DD_API_KEY: ${DD_API_KEY}
      DD_SITE: ${DD_SITE:-datadoghq.com}
      DD_ENV: ${DD_ENV:-workshop-local}
      DD_SERVICE: streamlit-ui
      DD_VERSION: ${DD_VERSION:-0.1.0}
    ports: ["8501:8501"]
    depends_on:
      - datadog-agent
      - api_rag
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8501/healthz || wget -qO- http://127.0.0.1:8501/ | grep -qi '<html'"]
      interval: 15s
      timeout: 5s
      retries: 20

# ──────────────────────────────────────────────────────────
# Volumes
# ──────────────────────────────────────────────────────────
volumes:
  chroma:
  ollama:
